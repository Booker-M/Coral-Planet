{"version":3,"sources":["cast/turtle.js","cast/flatcoral.js","cast/clam.js","cast/seakelp.js","cast/coreInhabitants.js","cast/plasticRings.js","cast/masks.js","cast/coke.js","cast/straws.js","cast/particles.js","cast/jellyfish.js","cast/fish.js","cast/littleFishes.js","universes/demo-universe.js","App.js","reportWebVitals.js","index.js"],"names":["Turtle","color","this","group","Group","materials","geometry","SphereGeometry","shellTopMaterial","MeshPhongMaterial","shading","FlatShading","push","shell","Mesh","rotation","z","Math","PI","add","shellBottomMaterial","belly","x","position","eyeMaterial","MeshToonMaterial","rightEye","set","leftEye","skinMaterial","side","DoubleSide","head","frontRight","frontLeft","backRight","backLeft","TorusGeometry","frontRightFlipper","y","frontLeftFlipper","backRightFlipper","backLeftFlipper","frontRightFlipperEnd","frontLeftFlipperEnd","backRightFlipperEnd","backLeftFlipperEnd","Coraltrunk","CylinderGeometry","material","mesh","Coralbranch","transparency","geometryright","materialright","meshright","FlatCoral","thickness","scale","coraltrunk","branchgroup","box","Box3","setFromObject","branchmaker","leftBranch","rightBranch","getCenter","Ridge","radius","height","thetaStart","theta","ridgeMaterial","ridgeGeometry","ConeGeometry","emissive","ridgeMesh","Clam","makeClam","rotateIncrement","curveIncrement","rotate","curve","i","newRidge","translate","tongueGeometry","tongueMaterial","tongueMesh","pearl","pearlMaterial","pearlMesh","clamTop","clamBottom","SeaKelp","path2","t","optionalTarget","Vector3","tx","sin","ty","tz","multiplyScalar","Curve","TubeGeometry","kelpMaterial","kelp","random","RoundCoral","newcoral","rotateY","CoreInhabitants","TorusKnotGeometry","coreMaterial","mesh1","mesh2","clam","coralgroup","kelpgroup","populate","max","randomize","populateFlat","flatcoral","populateKelp","randomizeKelp","type","ceil","plasticRings","shape","Shape","moveTo","lineTo","width","length","ExtrudeGeometry","steps","depth","bevelEnabled","clearMaterial","opacity","transparent","clickable","ringMaterial","RingGeometry","circle1","circle2","circle3","circle4","circle5","circle6","Masks","BoxGeometry","edges","EdgesGeometry","lineMaterial","LineBasicMaterial","lines","LineSegments","maskMaterial","MeshBasicMaterial","mask","points1","BufferGeometry","setFromPoints","maskLines","Line","points2","points3","points4","curve1","EllipseCurve","getPoints","curveMaterial","Coke","loader","TextureLoader","map","load","cylinder","Straws","strawGeometry","strawMaterial","linewidth","straw","strawLines","Particles","bubbleGeometry","IcosahedronGeometry","bubbleMaterial","particle","reset","normalize","callback","visible","JellyFish","headMaterial","tentacles","innerHeadMaterial","MeshNormalMaterial","innerhead","CircleGeometry","bottomMaterial","bottom","FirstCurve","SecondCurve","path","leg1Material","leg1","leg3Material","leg3","leg5Material","leg5","leg4Material","leg4","leg2Material","leg2","Fish","finGeometry","CircleBufferGeometry","finsMaterial","leftFin","rightFin","tailGeometry","tailFin","bezierCurveTo","ExtrudeBufferGeometry","bevelThickness","bevelSize","bevelSegments","bodyMaterial","body","eyeGeometry","lefteye","irisGeometry","irisMaterial","specular","leftiris","pupilGeometry","pupilMaterial","leftPupil","eyeGlareGeometry","eyeGlareMaterial","leftEyeGlare","righteye","rightiris","rightpupil","rightEyeGlare","LittleFishes","eyes","finMaterial","DEFAULT_ROTATION_RATE","FIN_SPEED","clock","Clock","raycaster","Raycaster","mouse","Vector2","counter","longCounter","rotateModifier","tentacleSway","createDemoUniverse","fieldOfView","nearPlane","farPlane","scene","Scene","camera","PerspectiveCamera","renderer","WebGLRenderer","alpha","setSize","setClearColor","coreInhabitants","turtleRotation","Object3D","turtle","jellyRotation","jellyFish","fishRotation","fish","littleFishRotation","littleFish1","setHex","littleFish2","littleFish3","particles","lights","DirectionalLight","turning","animateFish","finSpeed","animateTurtle","flipperSpeed","fast","render","requestAnimationFrame","onDocumentMouseDown","event","preventDefault","clientX","domElement","clientWidth","clientY","clientHeight","setFromCamera","intersects","intersectObjects","children","flatMap","hasOwnProperty","object","parent","animate","window","addEventListener","getElapsedTime","seakelp","vertices","v","verticesNeedUpdate","animateKelp","tentacle","initialY","animateJellyfish","turn","stop","cast","RADIAN_CONVERSION","App","useState","universe","setUniverse","cameraControl","setCameraControl","viewport","useRef","useEffect","viewportElement","current","innerWidth","innerHeight","innerHTML","appendChild","className","ref","onMouseDown","onMouseMove","translateZ","movementX","rotateX","movementY","onMouseUp","disabled","onClick","castMember","wireframe","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57b84716.chunk.js","sourcesContent":["/**\r\n * We take the approach of organizing each “cast member” in a scene within its own file.\r\n * This is a choice and isn’t required, but it does isolate internal changes/enhancements\r\n * to these specific “characters.”\r\n */\r\nimport { SphereGeometry, TorusGeometry, MeshPhongMaterial, MeshToonMaterial, Mesh, Group, FlatShading, DoubleSide } from 'three'\r\n\r\n/**\r\n * The use of a JavaScript “class” is also a design choice.\r\n */\r\nclass Turtle {\r\n  constructor(color) {\r\n    this.group = new Group()\r\n    this.materials = []\r\n\r\n    this.geometry = new SphereGeometry(1, 8, 4, 0, 6.3, 0, 1.1)\r\n    this.shellTopMaterial = new MeshPhongMaterial({ color: 0x434010, shading: FlatShading })\r\n    this.materials.push(this.shellTopMaterial)\r\n    this.shell = new Mesh(this.geometry, this.shellTopMaterial)\r\n    this.shell.rotation.z = -Math.PI / 2;\r\n    this.group.add(this.shell)\r\n\r\n    this.geometry = new SphereGeometry(2.3, 8, 4, 0, 6.3, 0, 0.4)\r\n    this.shellBottomMaterial = new MeshPhongMaterial({ color: 0xd2b48c, shading: FlatShading })\r\n    this.materials.push(this.shellBottomMaterial)\r\n    this.belly = new Mesh(this.geometry, this.shellBottomMaterial)\r\n    this.belly.rotation.x = Math.PI / 2;\r\n    this.belly.rotation.z = Math.PI / 2;\r\n    this.belly.position.x = 2.58;\r\n    this.group.add(this.belly)\r\n\r\n    this.eyeMaterial = new MeshToonMaterial({ color: 0x0 })\r\n    this.materials.push(this.eyeMaterial)\r\n    this.geometry = new SphereGeometry(0.05, 5, 5)\r\n    this.rightEye = new Mesh(this.geometry, this.eyeMaterial)\r\n    this.rightEye.rotation.x = Math.PI / 2;\r\n    this.rightEye.position.set(0.6, 0.25, 1.15);\r\n    this.group.add(this.rightEye)\r\n\r\n    this.geometry = new SphereGeometry(0.05, 5, 5)\r\n    this.leftEye = new Mesh(this.geometry, this.eyeMaterial)\r\n    this.leftEye.rotation.x = Math.PI / 2;\r\n    this.leftEye.position.set(0.6, -0.25, 1.15);\r\n    this.group.add(this.leftEye)\r\n\r\n    this.skinMaterial = new MeshToonMaterial({ color: 0x265926 })\r\n    this.skinMaterial.side = DoubleSide;\r\n    this.materials.push(this.skinMaterial)\r\n\r\n    this.geometry = new SphereGeometry(0.3, 12, 12)\r\n    this.head = new Mesh(this.geometry, this.skinMaterial)\r\n    this.head.rotation.x = Math.PI / 2;\r\n    this.head.position.set(0.5, 0, 1);\r\n    this.group.add(this.head)\r\n\r\n    this.frontRight = new Group()\r\n    this.frontLeft = new Group()\r\n    this.backRight = new Group()\r\n    this.backLeft = new Group()\r\n\r\n    this.group.add(this.frontRight)\r\n    this.group.add(this.frontLeft)\r\n    this.group.add(this.backRight)\r\n    this.group.add(this.backLeft)\r\n\r\n    this.geometry = new TorusGeometry(0.7, 0.1, 6, 6, 2)\r\n\r\n    this.frontRightFlipper = new Mesh(this.geometry, this.skinMaterial)\r\n    this.frontRightFlipper.rotation.y = Math.PI / 2;\r\n    this.frontRightFlipper.rotation.x = Math.PI / 1.5;\r\n    this.frontRightFlipper.position.set(0.5, -0.7, 0);\r\n    this.frontRight.add(this.frontRightFlipper)\r\n\r\n    this.frontLeftFlipper = new Mesh(this.geometry, this.skinMaterial)\r\n    this.frontLeftFlipper.rotation.y = Math.PI / 2;\r\n    this.frontLeftFlipper.rotation.x = Math.PI / 1.5;\r\n    this.frontLeftFlipper.position.set(0.5, 0.75, 0);\r\n    this.frontLeft.add(this.frontLeftFlipper)\r\n\r\n    this.geometry = new TorusGeometry(0.7, 0.1, 6, 6, 1.3)\r\n\r\n    this.backRightFlipper = new Mesh(this.geometry, this.skinMaterial)\r\n    this.backRightFlipper.rotation.y = Math.PI / 2;\r\n    this.backRightFlipper.rotation.x = Math.PI / 2.3;\r\n    this.backRightFlipper.position.set(0.5, -0.3, -1);\r\n    this.backRight.add(this.backRightFlipper)\r\n\r\n    this.backLeftFlipper = new Mesh(this.geometry, this.skinMaterial)\r\n    this.backLeftFlipper.rotation.y = Math.PI / 2;\r\n    this.backLeftFlipper.rotation.x = -Math.PI / 1.2;\r\n    this.backLeftFlipper.position.set(0.5, 0.3, -1);\r\n    this.backLeft.add(this.backLeftFlipper)\r\n\r\n    this.geometry = new SphereGeometry(0.1, 6, 6)\r\n\r\n    this.frontRightFlipperEnd = new Mesh(this.geometry, this.skinMaterial)\r\n    this.frontRightFlipperEnd.position.set(0.5, -1.27, 0.4);\r\n    this.frontRight.add(this.frontRightFlipperEnd)\r\n\r\n    this.frontLeftFlipperEnd = new Mesh(this.geometry, this.skinMaterial)\r\n    this.frontLeftFlipperEnd.position.set(0.5, 1.34, 0.36);\r\n    this.frontLeft.add(this.frontLeftFlipperEnd)\r\n\r\n    this.backRightFlipperEnd = new Mesh(this.geometry, this.skinMaterial)\r\n    this.backRightFlipperEnd.position.set(0.5, 0.383, -1.145);\r\n    this.backRight.add(this.backRightFlipperEnd)\r\n\r\n    this.backLeftFlipperEnd = new Mesh(this.geometry, this.skinMaterial)\r\n    this.backLeftFlipperEnd.position.set(0.5, -0.383, -1.145);\r\n    this.backLeft.add(this.backLeftFlipperEnd)\r\n  }\r\n}\r\n\r\nexport default Turtle\r\n","/**\r\n * We take the approach of organizing each “cast member” in a scene within its own file.\r\n * This is a choice and isn’t required, but it does isolate internal changes/enhancements\r\n * to these specific “characters.”\r\n */\r\n\r\nimport { CylinderGeometry, MeshToonMaterial, Mesh, Group, Box3 } from 'three'\r\n\r\n class Coraltrunk {\r\n   constructor(color, x, y, z) {\r\n     this.geometry = new CylinderGeometry(.1, .3, 3, 3)\r\n     this.material = new MeshToonMaterial({ color })\r\n     this.mesh = new Mesh(this.geometry, this.material)\r\n     this.mesh.position.set(x, y, z)\r\n   }\r\n }\r\n\r\n class Coralbranch {\r\n   constructor(color, x, y, z) {\r\n     this.geometry = new CylinderGeometry(.2, .3, 3, 3)\r\n     this.material = new MeshToonMaterial({ color})\r\n     this.material.transparency = true\r\n     //this.material.alphaMap = 'black'\r\n     this.mesh = new Mesh(this.geometry, this.material)\r\n     this.mesh.position.set(x-1, y, z)\r\n     this.mesh.rotation.z = Math.PI / 4\r\n\r\n     this.geometryright = new CylinderGeometry(.2, .3, 3, 3)\r\n     this.materialright = new MeshToonMaterial({ color})\r\n     this.meshright = new Mesh(this.geometryright, this.materialright)\r\n     this.meshright.position.set(x+1, y, z)\r\n     this.meshright.rotation.z = Math.PI / -4\r\n\r\n     this.group = new Group()\r\n     this.group.add(this.mesh, this.meshright)\r\n     this.group.position.set(x, y, z)\r\n\r\n   }\r\n }\r\n\r\n class FlatCoral {\r\n   constructor(color, x,y,z, thickness) {\r\n     var scale = 1\r\n     const coraltrunk = new Coraltrunk( color, x,y,z)\r\n     const branchgroup = new Group()\r\n     //const bindgroup = new Group()\r\n     //this.vector = new Vector3(x,y,z)\r\n     branchgroup.position.set(x, y-1, z)\r\n     branchgroup.scale.set(1,1, thickness)\r\n     this.group = new Group()\r\n     this.group.position.set(x,y,z)\r\n     this.materials = [coraltrunk.material]\r\n\r\n     var box = new Box3().setFromObject( this.group );\r\n     box.getCenter( branchgroup.position ); // this re-sets the mesh position\r\n     box.getCenter( coraltrunk.mesh.position)\r\n     coraltrunk.mesh.position.y += 1\r\n\r\n     this.group.add(coraltrunk.mesh, branchgroup)\r\n\r\n     this.materials = branchmaker(-1.4,1,z, 1, this.materials)\r\n     scale *= .9\r\n     this.materials = branchmaker(-3.6,2.6,z, 1.7, this.materials)\r\n     this.materials = branchmaker(-1.3,1.8,z, .2, this.materials)\r\n     this.materials = branchmaker(-1.3,.4,z, .1, this.materials)\r\n     scale *= .9\r\n     this.materials = branchmaker(-2.1,3.8,z, .95, this.materials)\r\n     this.materials = branchmaker(-.8,2.7,z, -.1, this.materials)\r\n     this.materials = branchmaker(-4,3.4,z, 1.3, this.materials)\r\n     this.materials = branchmaker(-.9,4,z, 0.5, this.materials)\r\n     scale *= .7\r\n     this.materials = branchmaker(-8.9,5.2,z, 2, this.materials)\r\n     this.materials = branchmaker(-4.9,4.2,z, 1, this.materials)\r\n     this.materials = branchmaker(-5.2,1.5,z, -.7, this.materials)\r\n     this.materials = branchmaker(-4.5,3.8,z, 0.1, this.materials)\r\n     scale*=.7\r\n     this.materials = branchmaker(-3.1,1.8,z, .65, this.materials)\r\n     this.materials = branchmaker(-2.9,5.3,z, .5, this.materials)\r\n     this.materials = branchmaker(-1.35,5.8,z, 0.1, this.materials)\r\n     this.materials = branchmaker(.25,4.4,z, .7, this.materials)\r\n     this.materials = branchmaker(-0.7,1.4,z, -0.5, this.materials)\r\n     this.materials = branchmaker(0,6,z, 0, this.materials)\r\n\r\n     function branchmaker(x,y,z, rotation, materials) {\r\n         const leftBranch = new Coralbranch(color, x, y, z )\r\n         leftBranch.group.scale.set(scale,scale,scale)\r\n         leftBranch.group.rotation.z = rotation;\r\n         branchgroup.add(leftBranch.group)\r\n         materials.push(leftBranch.material)\r\n         materials.push(leftBranch.materialright)\r\n\r\n         const rightBranch = new Coralbranch(color, - x, y, z )\r\n         rightBranch.group.scale.set(scale,scale,scale)\r\n         rightBranch.group.rotation.z = rotation - (rotation * 2) ;\r\n         branchgroup.add(rightBranch.group)\r\n         materials.push(rightBranch.material)\r\n         materials.push(rightBranch.materialright)\r\n\r\n         return materials\r\n     }\r\n   }\r\n }\r\n\r\nexport default FlatCoral\r\n","/**\r\n * We take the approach of organizing each “cast member” in a scene within its own file.\r\n * This is a choice and isn’t required, but it does isolate internal changes/enhancements\r\n * to these specific “characters.”\r\n */\r\n\r\nimport { ConeGeometry, TorusGeometry, SphereGeometry, MeshToonMaterial, MeshPhongMaterial, Mesh, FlatShading, Group, DoubleSide } from 'three'\r\n\r\n\r\nclass Ridge { //creates individual ridges of clam\r\n  constructor(radius, height, thetaStart, theta, ridgeMaterial) {\r\n    this.ridgeGeometry = new ConeGeometry( radius, height, 6, 1, true, thetaStart, theta )\r\n    this.ridgeMaterial = new MeshPhongMaterial({color: 0xd2e8ff, emissive: 0x444444})\r\n    this.ridgeMaterial.side = DoubleSide\r\n    this.ridgeMesh = new Mesh( this.ridgeGeometry, this.ridgeMaterial)\r\n  }\r\n}\r\n\r\n class Clam { // class for entire Clam\r\n   constructor(color) {\r\n     this.group = new Group()\r\n     this.materials = []\r\n\r\n     this.tongueGeometry = new TorusGeometry( .7, .9, 10, 16 ) // tongue of clam\r\n     this.tongueMaterial = new MeshToonMaterial( {color: 0x9D655B, shading: FlatShading})\r\n     this.materials.push(this.tongueMaterial)\r\n     this.tongueMesh = new Mesh(this.tongueGeometry, this.tongueMaterial)\r\n     this.tongueMesh.rotation.y = 1.6\r\n     this.tongueMesh.position.y = -1.4\r\n     this.tongueMesh.position.x = -.83\r\n\r\n\r\n     this.pearl = new SphereGeometry( .4, 7, 7 ); // pearl of clam\r\n     this.pearlMaterial = new MeshPhongMaterial( {color: 0xfbfdff, emissive: 0xd2e8ff})\r\n     this.materials.push(this.pearlMaterial)\r\n     this.pearlMesh = new Mesh(this.pearl, this.pearlMaterial)\r\n     this.pearlMesh.position.y = -1.75\r\n\r\n\r\n     this.clamTop = new Group() // top shell of clam\r\n     this.clamBottom = new Group() // bottom shell of clam\r\n\r\n     this.materials = makeClam(3, .5, .31, .04, 0, 3, this.clamTop, this.materials)\r\n     this.materials = makeClam(3, .5, -.31, .04, 0, 3, this.clamTop, this.materials)\r\n     this.materials = makeClam(3, .5, .27, 0, .5, 2, this.clamBottom, this.materials)\r\n     this.materials = makeClam(3, .5, -.27, 0, .5, 2, this.clamBottom, this.materials)\r\n\r\n     this.clamTop.rotation.z = .3\r\n     this.clamBottom.rotation.y = 3.15\r\n\r\n     // function to make ridges using Ridge class\r\n     function makeClam(height, radius, rotateIncrement, curveIncrement, thetaStart, theta, group, materials) {\r\n       var rotate = 0\r\n       var curve = 0\r\n       for( let i = 0; i < 12; i++ ) {\r\n         const newRidge = new Ridge(radius, height, thetaStart, theta)\r\n         materials.push(newRidge.ridgeMaterial)\r\n         newRidge.ridgeGeometry.translate(0, -height/2, 0)\r\n         newRidge.ridgeMesh.rotation.x = rotate\r\n         newRidge.ridgeMesh.rotation.z = curve\r\n         group.add(newRidge.ridgeMesh)\r\n         rotate += rotateIncrement - (rotate * .22)\r\n         if (i < 3 ) {\r\n           height -= height * .02\r\n         } else {\r\n           height -= height * .07\r\n         }\r\n         radius -= .03\r\n         curve -= curveIncrement\r\n       }\r\n       return materials\r\n     }\r\n\r\n     this.group.add(this.clamTop, this.clamBottom, this.tongueMesh, this.pearlMesh)\r\n     this.group.scale.set(.2,.2,.2)\r\n\r\n   }\r\n }\r\n\r\n\r\nexport default Clam\r\n","import { Group, Mesh, Vector3, Curve, TubeGeometry, MeshToonMaterial } from 'three'\r\n\r\nclass SeaKelp {\r\n  constructor(color) {\r\n    this.group = new Group()\r\n    this.materials = []\r\n\r\n    class SecondCurve extends Curve {\r\n      constructor(scale = 1) {\r\n        super()\r\n\r\n        this.scale = scale\r\n      }\r\n\r\n      getPoint(t, optionalTarget = new Vector3()) {\r\n        const tx = Math.sin(-0.5 * Math.PI * t)\r\n        const ty = t * 3 - 1.5\r\n        const tz = 0\r\n\r\n        return optionalTarget.set(tx, ty, tz).multiplyScalar(this.scale)\r\n      }\r\n    }\r\n    const path2 = new SecondCurve(10)\r\n\r\n    this.geometry = new TubeGeometry(path2, 10, 2, 3, false)\r\n    this.kelpMaterial = new MeshToonMaterial({ color: 0x1c6812 })\r\n    this.materials.push(this.kelpMaterial)\r\n    this.kelp = new Mesh(this.geometry, this.kelpMaterial)\r\n    this.kelp.scale.set(0.1, 0.1, 0.1)\r\n    this.kelp.position.z = 2 + Math.random()\r\n\r\n    this.group.add(this.kelp)\r\n    this.kelp.rotation.set(Math.PI / 2, 0, 0)\r\n  }\r\n}\r\n\r\nexport default SeaKelp\r\n","/**\r\n * We take the approach of organizing each “cast member” in a scene within its own file.\r\n * This is a choice and isn’t required, but it does isolate internal changes/enhancements\r\n * to these specific “characters.”\r\n */\r\nimport { TorusKnotGeometry, MeshToonMaterial, Mesh, Group } from 'three'\r\nimport FlatCoral from './flatcoral'\r\nimport Clam from './clam'\r\nimport SeaKelp from './seakelp'\r\n\r\n/**\r\n * The use of a JavaScript “class” is also a design choice.\r\n */\r\nclass CoreInhabitants {\r\n  constructor() {\r\n    this.group = new Group()\r\n    this.materials = []\r\n\r\n    this.geometry = new TorusKnotGeometry( 0.6, 0.4, 24, 5, 3, 4 );\r\n    this.coreMaterial = new MeshToonMaterial({ color: 0xbaa26c });\r\n    this.materials.push(this.coreMaterial)\r\n    this.mesh1 = new Mesh(this.geometry, this.coreMaterial);\r\n    this.mesh2 = new Mesh(this.geometry, this.coreMaterial);\r\n    this.mesh2.rotation.x = Math.PI / 2;\r\n\r\n    this.clam = new Clam()\r\n    this.clam.group.position.set(-1.17,0,0)\r\n    this.clam.group.rotation.z = 3.2\r\n    this.materials = [...this.materials, ...this.clam.materials]\r\n\r\n    const coralgroup = new Group()\r\n    const kelpgroup = new Group()\r\n\r\n    function populate(color, max, scale, height, thickness, materials) {\r\n      for( let i = 0; i < max; i++ ) {\r\n        let newcoral = new RoundCoral( color, 0, height, 0, thickness )\r\n        newcoral.group.scale.set( scale, scale, scale )\r\n        randomize(newcoral)\r\n        coralgroup.add(newcoral.group)\r\n        materials = [...materials, ...newcoral.materials]\r\n      }\r\n      return materials\r\n    }\r\n\r\n    function populateFlat(color, max, scale, x, y, thickness, materials) {\r\n      for( let i = 0; i < max; i++ ) {\r\n        let flatcoral = new FlatCoral( color, x, y, 0, thickness )\r\n        flatcoral.group.scale.set( scale, scale, scale )\r\n        randomize(flatcoral)\r\n        coralgroup.add(flatcoral.group)\r\n        materials = [...materials, ...flatcoral.materials]\r\n      }\r\n      return materials\r\n    }\r\n\r\n    function populateKelp(max, scale, materials) {\r\n      const position = Math.random() * 100\r\n      for( let i = 0; i < max; i++ ) {\r\n        let kelp = new SeaKelp()\r\n        kelp.group.scale.set( scale, scale, scale )\r\n        randomizeKelp(position, kelp)\r\n        kelpgroup.add(kelp.group)\r\n        materials = [...materials, ...kelp.materials]\r\n      }\r\n      return materials\r\n    }\r\n\r\n    function randomize(type) {\r\n      const random = Math.random()\r\n      type.group.rotation.x = random < 0.95 ? (10 + (Math.random() * 100)): (3 + (Math.random() * 10))\r\n      type.group.rotation.z = random < 0.95 ? (10 + (Math.random() * 100)): (3 + (Math.random() * 10))\r\n      type.group.rotation.y = random < 0.95 ? (10 + (Math.random() * 100)): (3 + (Math.random() * 10))\r\n    }\r\n\r\n    function randomizeKelp(position, kelp) {\r\n      kelp.group.rotation.x = (position + Math.random() * 0.5)\r\n      kelp.group.rotation.y = (position + Math.random() * 0.5)\r\n      kelp.group.rotation.z = (position + Math.random() * 1)\r\n    }\r\n\r\n    this.materials = populate(0xE76149, 6, .056, 19, 1, this.materials)  //light pink\r\n    this.materials = populate(0xFE4E4E, 6, .054, 20, 1.2, this.materials)  // pink FE7F4E\r\n    this.materials = populate(0xB73D23, 6, .054, 20, 1.2, this.materials)  // orange pink\r\n    this.materials = populate(0xB72327, 4, .054, 20, 1, this.materials)  //dark pink\r\n    this.materials = populate(0xB6B254, 4, .044, 26, 1, this.materials)  //yellow\r\n    this.materials = populate(0x455A3C, 4, .044, 26, 1, this.materials)  // light green\r\n    this.materials = populateFlat(0x911717, 2, .082, -1, -.8, 1, this.materials) //big dark pink\r\n    this.materials = populateFlat(0x22142F, 2, .085, 1.1, 0, 1.1, this.materials) //big purple\r\n    this.materials = populateFlat(0x053708, 2, .085, 0, 1, 1, this.materials)  //big dark green\r\n    for (let i = 0; i < 7; i++) {\r\n      this.materials = populateKelp(2 + Math.ceil(Math.random() * 3), .5, this.materials)\r\n    }\r\n\r\n    this.coralgroup = coralgroup\r\n    this.kelpgroup = kelpgroup\r\n\r\n    this.group.add(\r\n      this.mesh1,\r\n      this.mesh2,\r\n      this.coralgroup,\r\n      this.kelpgroup,\r\n      this.clam.group\r\n    )\r\n\r\n  }\r\n}\r\n\r\nclass RoundCoral {\r\n  constructor(color, x, y, z, thickness) {\r\n    this.group = new Group()\r\n    this.materials = []\r\n    var rotate = 0\r\n    for (let i = 0; i < 3; i++) {\r\n      const newcoral = new FlatCoral( color, x,y,z, thickness )\r\n      newcoral.group.scale.set(1,1, thickness)\r\n      newcoral.group.rotateY(rotate)\r\n      this.group.add(newcoral.group)\r\n      this.materials = [...this.materials, ...newcoral.materials]\r\n      rotate += 20\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default CoreInhabitants\r\n","/**\r\n * We take the approach of organizing each “cast member” in a scene within its own file.\r\n * This is a choice and isn’t required, but it does isolate internal changes/enhancements\r\n * to these specific “characters.”\r\n */\r\nimport {Mesh, MeshToonMaterial, RingGeometry, ExtrudeGeometry, Group, DoubleSide, Shape} from 'three'\r\n/**\r\n * The use of a JavaScript “class” is also a design choice.\r\n */\r\n\r\n class plasticRings {\r\n     constructor(color){\r\n         this.group = new Group()\r\n         this.group.materials = []\r\n\r\n        const length = 1.1, width = 1.6;\r\n        const shape = new Shape();\r\n        shape.moveTo( -length/2, -width/2 );\r\n        shape.lineTo( -length/2, width/2 );\r\n        shape.lineTo( length/2, width/2 );\r\n        shape.lineTo( length/2, -width/2 );\r\n        shape.lineTo( -length/2, -width/2 );\r\n        this.geometry = new ExtrudeGeometry(shape,{steps: 1, depth: 0.1, bevelEnabled: false});\r\n        this.clearMaterial = new MeshToonMaterial({ color, opacity: 0.0, transparent: true });\r\n        this.clickable = new Mesh(this.geometry, this.clearMaterial)\r\n        this.group.add(this.clickable)\r\n\r\n        this.ringMaterial = new MeshToonMaterial({ color });\r\n        this.ringMaterial.side = DoubleSide;\r\n        this.group.materials.push(this.ringMaterial)\r\n        this.geometry = new RingGeometry(0.2, 0.3, 10, 3, 0, 6.3);\r\n\r\n        this.circle1 = new Mesh(this.geometry, this.ringMaterial)\r\n        this.circle1.position.set(-0.25,-0.5,0)\r\n        this.group.add(this.circle1);\r\n\r\n        this.circle2 = new Mesh(this.geometry, this.ringMaterial)\r\n        this.circle2.position.set(0.25,-0.5,0)\r\n        this.group.add(this.circle2);\r\n\r\n        this.circle3 = new Mesh(this.geometry, this.ringMaterial)\r\n        this.circle3.position.set(-0.25,0,0)\r\n        this.group.add(this.circle3);\r\n\r\n        this.circle4 = new Mesh(this.geometry, this.ringMaterial)\r\n        this.circle4.position.set(0.25,0,0)\r\n        this.group.add(this.circle4);\r\n\r\n        this.circle5 = new Mesh(this.geometry, this.ringMaterial)\r\n        this.circle5.position.set(-0.25,0.5,0)\r\n        this.group.add(this.circle5);\r\n\r\n        this.circle6 = new Mesh(this.geometry, this.ringMaterial)\r\n        this.circle6.position.set(0.25,0.5,0)\r\n        this.group.add(this.circle6);\r\n\r\n        this.group.rotation.x = Math.random() * Math.PI / 2\r\n        this.group.rotation.y = Math.random() * Math.PI / 2\r\n        this.group.rotation.z = Math.random() * Math.PI / 2\r\n\r\n        this.group.scale.set(0.8, 0.8, 0.8)\r\n     }\r\n    }\r\n\r\n export default plasticRings","/**\r\n * We take the approach of organizing each “cast member” in a scene within its own file.\r\n * This is a choice and isn’t required, but it does isolate internal changes/enhancements\r\n * to these specific “characters.”\r\n */\r\nimport {Group, BoxGeometry, EdgesGeometry, EllipseCurve, BufferGeometry, LineBasicMaterial, Line,  Vector3, MeshBasicMaterial,  FlatShading, Mesh, LineSegments} from 'three'\r\n/**\r\n * The use of a JavaScript “class” is also a design choice.\r\n */\r\n\r\nclass Masks {\r\n    constructor() {\r\n      this.group = new Group()\r\n      this.group.materials = []\r\n\r\n      this.geometry = new BoxGeometry(.5,5,8,1,1,1)\r\n      this.geometry.scale(.04 , .06, .057)\r\n      this.edges = new EdgesGeometry(this.geometry)\r\n      this.lineMaterial = new LineBasicMaterial({color: 0xFFFFFF});\r\n      this.group.materials.push(this.lineMaterial)\r\n      this.lines = new LineSegments(this.edges, this.lineMaterial)\r\n      this.maskMaterial = new MeshBasicMaterial({color: 0x84C8ED, shading: FlatShading})\r\n      this.group.materials.push(this.maskMaterial)\r\n      this.mask = new Mesh(this.geometry, this.maskMaterial)\r\n      this.group.add(this.lines)\r\n      this.group.add(this.mask)\r\n\r\n      const points1 = []\r\n      points1.push(new Vector3(.015,-.05,-.23));\r\n      points1.push(new Vector3(.015,-.05,0));\r\n      points1.push(new Vector3(.015,-.05,.23));\r\n      this.geometry = new BufferGeometry().setFromPoints(points1);\r\n      this.maskLines = new Line(this.geometry, this.lineMaterial);\r\n      this.group.add(this.maskLines)\r\n\r\n      const points2 = []\r\n      points2.push(new Vector3(.015,0.045,-.23));\r\n      points2.push(new Vector3(.015,0.045,0));\r\n      points2.push(new Vector3(.015,0.045,.23));\r\n      this.geometry = new BufferGeometry().setFromPoints(points2);\r\n      this.maskLines = new Line(this.geometry, this.lineMaterial);\r\n      this.group.add(this.maskLines)\r\n\r\n      const points3 = []\r\n      points3.push(new Vector3(-.015,-.05,-.23));\r\n      points3.push(new Vector3(-.015,-.05,0));\r\n      points3.push(new Vector3(-.015,-.05,.23));\r\n      this.geometry = new BufferGeometry().setFromPoints(points3);\r\n      this.maskLines = new Line(this.geometry, this.lineMaterial);\r\n      this.group.add(this.maskLines)\r\n\r\n      const points4 = []\r\n      points4.push(new Vector3(-.015,0.045,-.23));\r\n      points4.push(new Vector3(-.015,0.045,0));\r\n      points4.push(new Vector3(-.015,0.045,.23));\r\n      this.geometry = new BufferGeometry().setFromPoints(points4);\r\n      this.maskLines = new Line(this.geometry, this.lineMaterial);\r\n      this.group.add(this.maskLines)\r\n\r\n\r\n      const curve1 = new EllipseCurve(\r\n          0,0,\r\n          .11,.11,\r\n          0, 2* Math.PI,\r\n          true,\r\n          0\r\n      );\r\n      this.geometry = new BufferGeometry().setFromPoints(curve1.getPoints(50));\r\n      this.curveMaterial = new LineBasicMaterial({color: 0xFFFFFF});\r\n      this.group.materials.push(this.curveMaterial)\r\n      this.circle1 = new Line(this.geometry, this.curveMaterial);\r\n      this.circle1.rotation.y = Math.PI/2 \r\n      this.circle1.scale.set(3.9,1.3,3.9)\r\n      this.group.add(this.circle1);\r\n\r\n      this.group.scale.set(1.205,1.215,1.215);\r\n      }\r\n}\r\nexport default Masks;","/**\r\n * We take the approach of organizing each “cast member” in a scene within its own file.\r\n * This is a choice and isn’t required, but it does isolate internal changes/enhancements\r\n * to these specific “characters.”\r\n */\r\nimport { MeshBasicMaterial, Mesh, Group, CylinderGeometry, TextureLoader } from 'three'\r\n\r\n/**\r\n * The use of a JavaScript “class” is also a design choice.\r\n */\r\nclass Coke {\r\n  constructor() {\r\n    this.group = new Group()\r\n    const cylinders = []\r\n    const loader = new TextureLoader()\r\n\r\n    this.group.materials = [\r\n      new MeshBasicMaterial({\r\n        map: loader.load('images/cola2.jpg')\r\n      }),\r\n      new MeshBasicMaterial({\r\n        map: loader.load('images/metal.jpg')\r\n      }),\r\n      new MeshBasicMaterial({\r\n        map: loader.load('images/metal.jpg')\r\n      })\r\n    ]\r\n\r\n    this.geometry = new CylinderGeometry(0.2, 0.2, 1, 10)\r\n    this.cylinder = new Mesh(this.geometry, this.group.materials)\r\n\r\n    this.group.add(this.cylinder)\r\n    cylinders.push(this.cylinder)\r\n  }\r\n}\r\n\r\nexport default Coke\r\n","/**\r\n * We take the approach of organizing each “cast member” in a scene within its own file.\r\n * This is a choice and isn’t required, but it does isolate internal changes/enhancements\r\n * to these specific “characters.”\r\n */\r\nimport {Group, DoubleSide, CylinderGeometry, BoxGeometry, BufferGeometry, LineBasicMaterial, Line,  Vector3, MeshBasicMaterial, Mesh} from 'three'\r\n/**\r\n * The use of a JavaScript “class” is also a design choice.\r\n */\r\n\r\nclass Straws {\r\n    constructor() {\r\n      this.group = new Group()\r\n      this.lines = new Group()\r\n      this.group.materials = []\r\n\r\n      this.geometry = new BoxGeometry( 0.3, 1.1, 0.3);\r\n      this.clearMaterial = new MeshBasicMaterial({ color: 0x000000, opacity: 0.0, transparent: true });\r\n      this.clickable = new Mesh(this.geometry, this.clearMaterial)\r\n      this.group.add(this.clickable)\r\n\r\n      this.strawGeometry = new CylinderGeometry(.5,.5,10,5,1,0,6.3)\r\n      this.strawMaterial = new MeshBasicMaterial({color: 0xffffff})\r\n      this.strawGeometry.scale(.1, .1, .1)\r\n      this.strawMaterial.side = DoubleSide\r\n      this.lineMaterial = new LineBasicMaterial({color: 0xFF0000, linewidth: 12});\r\n      this.lineMaterial.side = DoubleSide\r\n      this.group.materials.push(this.strawMaterial)\r\n      this.group.materials.push(this.lineMaterial)\r\n      this.straw = new Mesh(this.strawGeometry, this.strawMaterial)\r\n      this.group.add(this.straw)\r\n\r\n      const points1 = []\r\n      points1.push(new Vector3(.05, 0, 0));\r\n      points1.push(new Vector3(.05, 0.50, 0));\r\n      points1.push(new Vector3(.05, -0.50, 0));\r\n      this.geometry = new BufferGeometry().setFromPoints(points1);\r\n      this.strawLines = new Line(this.geometry, this.lineMaterial);\r\n      this.lines.add(this.strawLines)\r\n\r\n      const points2 = []\r\n      points2.push(new Vector3(-.05, 0, 0));\r\n      points2.push(new Vector3(-.05, 0.50, 0));\r\n      points2.push(new Vector3(-.05, -0.50, 0));\r\n      this.geometry = new BufferGeometry().setFromPoints(points2);\r\n      this.strawLines = new Line(this.geometry, this.lineMaterial);\r\n      this.lines.add(this.strawLines)\r\n\r\n      const points3 = []\r\n      points3.push(new Vector3(0, 0, -.05));\r\n      points3.push(new Vector3(0, 0.50, -.05));\r\n      points3.push(new Vector3(0, -0.50, -.05));\r\n      this.geometry = new BufferGeometry().setFromPoints(points3);\r\n      this.strawLines = new Line(this.geometry, this.lineMaterial);\r\n      this.lines.add(this.strawLines)\r\n\r\n      const points4 = []\r\n      points4.push(new Vector3(0, 0, .05));\r\n      points4.push(new Vector3(0, 0.50, .05));\r\n      points4.push(new Vector3(0, -0.50, .05));\r\n      this.geometry = new BufferGeometry().setFromPoints(points4);\r\n      this.strawLines = new Line(this.geometry, this.lineMaterial);\r\n      this.lines.add(this.strawLines)\r\n\r\n      this.lines.rotation.y = Math.PI/3\r\n      this.group.add(this.lines)\r\n      this.group.scale.set(1.15, 1.15, 1.15)\r\n  }\r\n}\r\nexport default Straws;","/**\r\n * We take the approach of organizing each “cast member” in a scene within its own file.\r\n * This is a choice and isn’t required, but it does isolate internal changes/enhancements\r\n * to these specific “characters.”\r\n */\r\nimport { IcosahedronGeometry, MeshToonMaterial, Mesh, Group } from 'three'\r\nimport plasticRings from '../cast/plasticRings'\r\nimport Masks from '../cast/masks'\r\nimport Coke from '../cast/coke'\r\nimport Straws from '../cast/straws'\r\n\r\n/**\r\n * The use of a JavaScript “class” is also a design choice.\r\n */\r\nclass Particles {\r\n  constructor(color) {\r\n    this.group = new Group()\r\n    this.bubbleGeometry = new IcosahedronGeometry(0.3, 1)\r\n    this.bubbleMaterial = new MeshToonMaterial({ color })\r\n    this.materials = [this.bubbleMaterial]\r\n\r\n    for (let i = 0; i < 200; i++) {\r\n      let particle\r\n      if (Math.random() < 0.95) {\r\n        particle = new Mesh(this.bubbleGeometry, this.bubbleMaterial)\r\n        particle.reset = function () {\r\n          particle.position.set(Math.random() - 0.5, Math.random() - 0.5, Math.random() - 0.5).normalize()\r\n          particle.position.multiplyScalar(10 + Math.random() * 75)\r\n        }\r\n        particle.reset()\r\n        particle.callback = function () {\r\n          this.reset()\r\n        }\r\n      } else {\r\n        let random = Math.random()\r\n        particle = random < 0.25 ? new plasticRings(0xffffff).group : random < 0.5 ? new Masks().group : random < 0.75 ? new Coke().group  : new Straws().group \r\n        particle.position.set(Math.random() - 0.5, Math.random() - 0.5, Math.random() - 0.5).normalize()\r\n        particle.position.multiplyScalar(3 + Math.random() * 20)\r\n        particle.reset = function () {\r\n          particle.visible = false\r\n        }\r\n        this.materials = [...this.materials, ...particle.materials]\r\n      }\r\n      particle.callback = function () {\r\n        this.reset()\r\n      }\r\n      this.group.add(particle)\r\n    }\r\n  }\r\n}\r\n\r\nexport default Particles\r\n","import {\r\n  TubeGeometry,\r\n  CircleGeometry,\r\n  SphereGeometry,\r\n  MeshNormalMaterial,\r\n  MeshToonMaterial,\r\n  MeshPhongMaterial,\r\n  Mesh,\r\n  Group,\r\n  Curve,\r\n  Vector3\r\n} from 'three'\r\n\r\nclass JellyFish {\r\n  constructor() {\r\n    this.group = new Group()\r\n    this.materials = []\r\n\r\n    this.geometry = new SphereGeometry(1, 15, 10, 0, 2 * Math.PI, 0, 0.5 * Math.PI)\r\n    this.headMaterial = new MeshPhongMaterial({ color: 0xd656d2, transparent: true, opacity: 0.3 })\r\n    this.materials.push(this.headMaterial)\r\n    this.head = new Mesh(this.geometry, this.headMaterial)\r\n    this.head.rotation.y = -Math.PI / 2\r\n    this.head.position.x = 0.5\r\n    this.head.position.y = -0.5\r\n    this.head.position.z = -3\r\n\r\n    this.group.add(this.head)\r\n    this.tentacles = new Group()\r\n    this.group.add(this.tentacles)\r\n\r\n    this.geometry = new SphereGeometry(0.9, 15, 10, 0, 2 * Math.PI, 0, 0.5 * Math.PI)\r\n    this.innerHeadMaterial = new MeshNormalMaterial({ color: 0xffffff })\r\n    this.materials.push(this.innerHeadMaterial)\r\n    this.innerhead = new Mesh(this.geometry, this.innerHeadMaterial)\r\n    this.innerhead.rotation.y = -Math.PI / 2\r\n    this.innerhead.position.x = 0.5\r\n    this.innerhead.position.y = -0.5\r\n    this.innerhead.position.z = -3\r\n\r\n    this.group.add(this.innerhead)\r\n\r\n    this.geometry = new CircleGeometry(1, 15)\r\n    this.bottomMaterial = new MeshNormalMaterial({ color: 0xffffff, transparent: true, opacity: 0.7 })\r\n    this.materials.push(this.bottomMaterial)\r\n    this.bottom = new Mesh(this.geometry, this.bottomMaterial)\r\n    this.bottom.rotation.x = Math.PI / 2\r\n    this.bottom.rotation.z = Math.PI / 2\r\n    this.bottom.position.x = 0.5\r\n    this.bottom.position.y = -0.5\r\n    this.bottom.position.z = -3\r\n    this.group.add(this.bottom)\r\n\r\n    class FirstCurve extends Curve {\r\n      constructor(scale = 1) {\r\n        super()\r\n\r\n        this.scale = scale\r\n      }\r\n\r\n      getPoint(t, optionalTarget = new Vector3()) {\r\n        const tx = Math.sin(2 * Math.PI * t)\r\n        const ty = t * 3 - 1.5\r\n        const tz = 0\r\n\r\n        return optionalTarget.set(tx, ty, tz).multiplyScalar(this.scale)\r\n      }\r\n    }\r\n    class SecondCurve extends Curve {\r\n      constructor(scale = 1) {\r\n        super()\r\n\r\n        this.scale = scale\r\n      }\r\n\r\n      getPoint(t, optionalTarget = new Vector3()) {\r\n        const tx = Math.sin(-2 * Math.PI * 5)\r\n        const ty = t * 3 - 1.5\r\n        const tz = 0\r\n\r\n        return optionalTarget.set(tx, ty, tz).multiplyScalar(this.scale)\r\n      }\r\n    }\r\n    const path = new FirstCurve(5)\r\n    this.geometry = new TubeGeometry(path, 20, 2, 3, false)\r\n    this.leg1Material = new MeshToonMaterial({ color: 0xd656d2 })\r\n    this.materials.push(this.leg1Material)\r\n    this.leg1 = new Mesh(this.geometry, this.leg1Material)\r\n    this.leg1.scale.set(0.1, 0.1, 0.1)\r\n    this.leg1.position.x = -0.1\r\n    this.leg1.position.y = -1.1\r\n    this.leg1.position.z = -3\r\n    this.leg1.rotation.y = Math.PI / 2\r\n\r\n    this.tentacles.add(this.leg1)\r\n\r\n    this.geometry = new TubeGeometry(path, 16, 2, 2, false)\r\n    this.leg3Material = new MeshToonMaterial({ color: 0xdd98dc })\r\n    this.materials.push(this.leg3Material)\r\n    this.leg3 = new Mesh(this.geometry, this.leg3Material)\r\n    this.leg3.scale.set(0.1, 0.1, 0.1)\r\n    this.leg3.position.x = 0.5\r\n    this.leg3.position.y = -1.1\r\n    this.leg3.position.z = -2.5\r\n    this.leg3.rotation.y = Math.PI / 2\r\n\r\n    this.tentacles.add(this.leg3)\r\n\r\n    this.geometry = new TubeGeometry(path, 20, 2, 2, false)\r\n    this.leg5Material = new MeshToonMaterial({ color: 0xdd98dc })\r\n    this.materials.push(this.leg5Material)\r\n    this.leg5 = new Mesh(this.geometry, this.leg5Material)\r\n    this.leg5.scale.set(0.1, 0.1, 0.1)\r\n    this.leg5.position.x = 1\r\n    this.leg5.position.y = -1.1\r\n    this.leg5.position.z = -3.5\r\n    this.leg5.rotation.y = Math.PI / 2\r\n\r\n    this.tentacles.add(this.leg5)\r\n\r\n    this.geometry = new TubeGeometry(path, 20, 2, 3, false)\r\n    this.leg4Material = new MeshToonMaterial({ color: 0xd656d2 })\r\n    this.materials.push(this.leg4Material)\r\n    this.leg4 = new Mesh(this.geometry, this.leg4Material)\r\n    this.leg4.scale.set(0.1, 0.1, 0.1)\r\n    this.leg4.position.x = 1\r\n    this.leg4.position.y = -1\r\n    this.leg4.position.z = -3\r\n    this.leg4.rotation.y = Math.PI / 2\r\n    this.tentacles.add(this.leg4)\r\n\r\n    const path2 = new SecondCurve(8)\r\n    this.geometry = new TubeGeometry(path2, 16, 2, 3, false)\r\n    this.leg2Material = new MeshToonMaterial({ color: 0xd656d2 })\r\n    this.materials.push(this.leg2Material)\r\n    this.leg2 = new Mesh(this.geometry, this.leg2Material)\r\n    this.leg2.scale.set(0.1, 0.1, 0.1)\r\n    this.leg2.position.x = 0.6\r\n    this.leg2.position.y = -1.5\r\n    this.leg2.position.z = -3\r\n    this.leg2.rotation.y = Math.PI / 2\r\n    this.tentacles.add(this.leg2)\r\n  }\r\n}\r\n\r\nexport default JellyFish\r\n","/**\r\n * We take the approach of organizing each “cast member” in a scene within its own file.\r\n * This is a choice and isn’t required, but it does isolate internal changes/enhancements\r\n * to these specific “characters.”\r\n */\r\nimport {Group, CircleBufferGeometry, MeshToonMaterial, Shape, ExtrudeBufferGeometry, MeshBasicMaterial, MeshPhongMaterial, FlatShading, Mesh, SphereGeometry, DoubleSide} from 'three'\r\n/**\r\n * The use of a JavaScript “class” is also a design choice.\r\n */\r\n\r\nclass Fish {\r\n  constructor(color){\r\n    this.group = new Group()\r\n    this.materials = []\r\n\r\n    this.finGeometry = new CircleBufferGeometry(8.9, 8, 0, Math.PI*.14)\r\n    this.finsMaterial = new MeshBasicMaterial({color: 0xfff355, shading: FlatShading})\r\n    this.finsMaterial.side = DoubleSide\r\n    this.materials.push(this.finsMaterial)\r\n    this.leftFin = new Mesh(this.finGeometry, this.finsMaterial)\r\n    this.leftFin.position.y = 1\r\n    this.leftFin.position.x = .6\r\n    this.leftFin.scale.set(-.069 , -.12, -.1)\r\n    this.leftFin.rotation.y = Math.PI/2\r\n    this.leftFin.position.z = 0\r\n    this.group.add(this.leftFin)\r\n\r\n    this.rightFin = new Mesh(this.finGeometry, this.finsMaterial)\r\n    this.rightFin.position.y = 1\r\n    this.rightFin.position.x = .6\r\n    this.rightFin.scale.set(.069 , -.12, -.1)\r\n    this.rightFin.rotation.y = Math.PI/2\r\n    this.rightFin.position.z = .092\r\n    this.group.add(this.rightFin)\r\n\r\n    this.tailGeometry = new CircleBufferGeometry(10, 5, 0, Math.PI*.5)\r\n    this.tailFin = new Mesh(this.tailGeometry, this.finsMaterial)\r\n    this.tailFin.position.y = 1.86\r\n    this.tailFin.position.x = .282\r\n    this.tailFin.scale.set(.06 , .06, .7)\r\n    this.tailFin.rotation.z = Math.PI/4\r\n    this.tailFin.position.z = .092\r\n    this.group.add(this.tailFin)\r\n\r\n    const shape = new Shape();\r\n    const x = 0;\r\n    const y = 0;\r\n    shape.moveTo( x + 5, y + 5 );\r\n    shape.bezierCurveTo( x + 5, y + 5, x + 4, y, x, y );\r\n    shape.bezierCurveTo( x - 9, y, x - 9, y + 12,x - 9, y + 12 );\r\n    shape.bezierCurveTo( x - 6, y + 11, x - 3, y + 15.4, x + 5, y + 19 );\r\n    shape.bezierCurveTo( x + 12, y + 15.4, x + 16, y + 11, x + 16, y + 7 );\r\n    shape.bezierCurveTo( x + 16, y + 7, x + 16, y, x + 10, y );\r\n    shape.bezierCurveTo( x + 10, y, x + 5, y + 8, x + 8, y + 8 );\r\n    \r\n    const extrudeSettings = {\r\n      steps: 2,\r\n      depth: 2,\r\n      bevelEnabled: true,\r\n      bevelThickness: 1,\r\n      bevelSize: 1,\r\n      bevelSegments: 2,\r\n      };\r\n  \r\n    this.geometry = new ExtrudeBufferGeometry(shape, extrudeSettings);\r\n    this.bodyMaterial = new MeshPhongMaterial({color: 0x0000ff})\r\n    this.materials.push(this.bodyMaterial)\r\n    this.body = new Mesh(this.geometry, this.bodyMaterial);\r\n    this.body.scale.set(.06,.1,.06)\r\n    this.group.add(this.body);\r\n\r\n    this.eyeGeometry = new SphereGeometry(0.15, 10, 10)\r\n    this.eyeMaterial = new MeshToonMaterial({ color: 0xffffff})\r\n    this.materials.push(this.eyeMaterial)\r\n    this.lefteye = new Mesh(this.eyeGeometry, this.eyeMaterial)   \r\n    this.lefteye.rotation.x = Math.PI / 2;\r\n    this.lefteye.position.y = .4\r\n    this.lefteye.position.x = -.1\r\n    this.lefteye.position.z = .14\r\n    this.group.add(this.lefteye)\r\n         \r\n    this.irisGeometry = new SphereGeometry(0.12, 10, 10)\r\n    this.irisMaterial = new MeshPhongMaterial({ color: 0xf822fc, emissive: 0xe56666, specular: 0x111111})\r\n    this.materials.push(this.irisMaterial)\r\n    this.leftiris = new Mesh(this.irisGeometry, this.irisMaterial)   \r\n    this.leftiris.rotation.x = Math.PI / 2;\r\n    this.leftiris.position.y = .393\r\n    this.leftiris.position.x = -.1\r\n    this.leftiris.position.z = .19\r\n    this.group.add(this.leftiris)\r\n\r\n    this.pupilGeometry = new SphereGeometry(0.092, 10, 10)\r\n    this.pupilMaterial = new MeshToonMaterial({ color: 0x0})\r\n    this.materials.push(this.pupilMaterial)\r\n    this.leftPupil = new Mesh(this.pupilGeometry, this.pupilMaterial)   \r\n    this.leftPupil.rotation.x = Math.PI / 2;\r\n    this.leftPupil.position.y = .389\r\n    this.leftPupil.position.x = -.1\r\n    this.leftPupil.position.z = .23\r\n    this.group.add(this.leftPupil)\r\n\r\n    this.eyeGlareGeometry = new SphereGeometry(0.0211, 6, 6)\r\n    this.eyeGlareMaterial = new MeshToonMaterial({ color: 0xffffff})\r\n    this.materials.push(this.eyeGlareMaterial)\r\n    this.leftEyeGlare = new Mesh(this.eyeGlareGeometry, this.eyeGlareMaterial)   \r\n    this.leftEyeGlare.rotation.x = Math.PI / 2;\r\n    this.leftEyeGlare.position.y = .389\r\n    this.leftEyeGlare.position.x = -.1\r\n    this.leftEyeGlare.position.z = .311\r\n    this.group.add(this.leftEyeGlare)\r\n    \r\n    this.material = new MeshToonMaterial({ color: 0xffffff})\r\n    this.righteye = new Mesh(this.eyeGeometry, this.eyeMaterial)   \r\n    this.righteye.rotation.x = Math.PI / 2;\r\n    this.righteye.position.y = .4\r\n    this.righteye.position.x = -.09\r\n    this.righteye.position.z = -.04\r\n    this.group.add(this.righteye)\r\n\r\n    this.rightiris = new Mesh(this.irisGeometry, this.irisMaterial)   \r\n    this.rightiris.rotation.x = Math.PI / 2;\r\n    this.rightiris.position.y = .393\r\n    this.rightiris.position.x = -.09\r\n    this.rightiris.position.z = -.09\r\n    this.group.add(this.rightiris)\r\n\r\n    this.rightpupil = new Mesh(this.pupilGeometry, this.pupilMaterial)   \r\n    this.rightpupil.rotation.x = Math.PI / 2;\r\n    this.rightpupil.position.y = .389\r\n    this.rightpupil.position.x = -.09\r\n    this.rightpupil.position.z = -.13\r\n    this.group.add(this.rightpupil)\r\n\r\n    this.rightEyeGlare = new Mesh(this.eyeGlareGeometry, this.eyeGlareMaterial)   \r\n    this.rightEyeGlare.rotation.x = Math.PI / 2;\r\n    this.rightEyeGlare.position.y = .389\r\n    this.rightEyeGlare.position.x = -.1\r\n    this.rightEyeGlare.position.z = -.22\r\n    this.group.add(this.rightEyeGlare)\r\n\r\n    this.group.position.set(1,1,1)\r\n    this.group.rotation.z = -1*Math.PI/2 +.2\r\n    this.group.rotation.y = 2*Math.PI/3\r\n    this.group.scale.set = (1.4, 1.4, 1.4)\r\n  }\r\n}\r\n\r\nexport default Fish;\r\n\r\n   ","/**\r\n * We take the approach of organizing each “cast member” in a scene within its own file.\r\n * This is a choice and isn’t required, but it does isolate internal changes/enhancements\r\n * to these specific “characters.”\r\n */\r\nimport {Group, CircleBufferGeometry, MeshToonMaterial, Shape, ExtrudeBufferGeometry, MeshBasicMaterial, MeshPhongMaterial, FlatShading, Mesh, SphereGeometry, DoubleSide} from 'three'\r\n/**\r\n * The use of a JavaScript “class” is also a design choice.\r\n */\r\n\r\nclass LittleFishes {\r\n  constructor(color){\r\n    this.group = new Group()\r\n    this.eyes = new Group()\r\n    this.materials = []\r\n\r\n    this.eyeGeometry = new SphereGeometry(0.15, 10, 10)\r\n    this.eyeMaterial = new MeshToonMaterial({ color: 0xffffff})\r\n    this.materials.push(this.eyeMaterial)\r\n    this.lefteye = new Mesh(this.eyeGeometry, this.eyeMaterial)   \r\n    this.lefteye.rotation.x = Math.PI / 2;\r\n    this.lefteye.position.y = .4\r\n    this.lefteye.position.x = -.1\r\n    this.lefteye.position.z = .14\r\n    this.eyes.add(this.lefteye)\r\n         \r\n    this.irisGeometry = new SphereGeometry(0.12, 10, 10)\r\n    this.irisMaterial = new MeshPhongMaterial({ color: 0xF43122, emissive: 0x3500, specular: 0x111111})\r\n    this.materials.push(this.irisMaterial)\r\n    this.leftiris = new Mesh(this.irisGeometry, this.irisMaterial)   \r\n    this.leftiris.rotation.x = Math.PI / 2;\r\n    this.leftiris.position.y = .393\r\n    this.leftiris.position.x = -.1\r\n    this.leftiris.position.z = .19\r\n    this.eyes.add(this.leftiris)\r\n\r\n    this.pupilGeometry = new SphereGeometry(0.092, 10, 10)\r\n    this.pupilMaterial = new MeshToonMaterial({ color: 0x0})\r\n    this.materials.push(this.pupilMaterial)\r\n    this.leftPupil = new Mesh(this.pupilGeometry, this.pupilMaterial)   \r\n    this.leftPupil.rotation.x = Math.PI / 2;\r\n    this.leftPupil.position.y = .389\r\n    this.leftPupil.position.x = -.1\r\n    this.leftPupil.position.z = .23\r\n    this.eyes.add(this.leftPupil)\r\n\r\n    this.eyeGlareGeometry = new SphereGeometry(0.0211, 6, 6)\r\n    this.eyeGlareMaterial = new MeshToonMaterial({ color: 0xffffff})\r\n    this.materials.push(this.eyeGlareMaterial)\r\n    this.leftEyeGlare = new Mesh(this.eyeGlareGeometry, this.eyeGlareMaterial)   \r\n    this.leftEyeGlare.rotation.x = Math.PI / 2;\r\n    this.leftEyeGlare.position.y = .389\r\n    this.leftEyeGlare.position.x = -.1\r\n    this.leftEyeGlare.position.z = .311\r\n    this.eyes.add(this.leftEyeGlare)\r\n    \r\n    this.righteye = new Mesh(this.eyeGeometry, this.eyeMaterial)   \r\n    this.righteye.rotation.x = Math.PI / 2;\r\n    this.righteye.position.y = .4\r\n    this.righteye.position.x = -.09\r\n    this.righteye.position.z = -.04\r\n    this.eyes.add(this.righteye)\r\n         \r\n    this.rightiris = new Mesh(this.irisGeometry, this.irisMaterial)   \r\n    this.rightiris.rotation.x = Math.PI / 2;\r\n    this.rightiris.position.y = .393\r\n    this.rightiris.position.x = -.09\r\n    this.rightiris.position.z = -.09\r\n    this.eyes.add(this.rightiris)\r\n\r\n    this.rightpupil = new Mesh(this.pupilGeometry, this.pupilMaterial)   \r\n    this.rightpupil.rotation.x = Math.PI / 2;\r\n    this.rightpupil.position.y = .389\r\n    this.rightpupil.position.x = -.09\r\n    this.rightpupil.position.z = -.13\r\n    this.eyes.add(this.rightpupil)\r\n\r\n    this.rightEyeGlare = new Mesh(this.eyeGlareGeometry, this.eyeGlareMaterial)   \r\n    this.rightEyeGlare.rotation.x = Math.PI / 2;\r\n    this.rightEyeGlare.position.y = .389\r\n    this.rightEyeGlare.position.x = -.1\r\n    this.rightEyeGlare.position.z = -.22\r\n    this.eyes.add(this.rightEyeGlare)\r\n    this.eyes.scale.set(.95, .95, .95);\r\n    this.eyes.position.x += .07\r\n    this.eyes.position.y += .04\r\n    this.group.add(this.eyes);\r\n\r\n    this.finGeometry = new CircleBufferGeometry(8.9, 7, 0, Math.PI*.14)\r\n    this.finMaterial = new MeshBasicMaterial({color: 0xffffff, emissive: 0x35541d, specular: 0x444444,shading: FlatShading})\r\n    this.finMaterial.side = DoubleSide\r\n    this.materials.push(this.finMaterial)\r\n    this.leftFin = new Mesh(this.finGeometry, this.finMaterial)\r\n    this.leftFin.position.y = 1.2\r\n    this.leftFin.position.x = .2\r\n    this.leftFin.scale.set(-.069 , -.12, -.1)\r\n    this.leftFin.rotation.y = Math.PI/2\r\n    this.leftFin.position.z = 0\r\n    this.group.add(this.leftFin)\r\n\r\n    this.rightFin = new Mesh(this.finGeometry, this.finMaterial)\r\n    this.rightFin.position.y = 1.2\r\n    this.rightFin.position.x = .2\r\n    this.rightFin.scale.set(.069 , -.12, -.1)\r\n    this.rightFin.rotation.y = Math.PI/2\r\n    this.rightFin.position.z = .092\r\n    this.group.add(this.rightFin)\r\n\r\n    this.tailGeometry = new CircleBufferGeometry(5, 4, 0, Math.PI*.5)\r\n    this.tailFin = new Mesh(this.tailGeometry, this.finMaterial)\r\n    this.tailFin.position.y = 1.66\r\n    this.tailFin.position.x = .242 \r\n    this.tailFin.scale.set(.11 , .11, 1.11)\r\n    this.tailFin.rotation.z = Math.PI/4\r\n    this.tailFin.position.z = .092\r\n    this.group.add(this.tailFin)\r\n\r\n    const shape = new Shape();\r\n    const x = 0;\r\n    const y = 0;\r\n    shape.moveTo( x + 5, y + 5 );\r\n    shape.bezierCurveTo( x + 5, y + 5, x + 4, y, x, y );\r\n    shape.bezierCurveTo( x - 6, y, x - 6, y + 7,x - 6, y + 7 );\r\n    shape.bezierCurveTo( x - 6, y + 11, x - 3, y + 15.4, x + 5, y + 19 );\r\n    shape.bezierCurveTo( x + 12, y + 15.4, x + 16, y + 11, x + 16, y + 7 );\r\n    shape.bezierCurveTo( x + 16, y + 7, x + 16, y, x + 10, y );\r\n    shape.bezierCurveTo( x + 6, y-1, x +6, y-1, x + 6, y );\r\n    \r\n    const extrudeSettings = {\r\n      steps: 2,\r\n      depth: 2,\r\n      bevelEnabled: true,\r\n      bevelThickness: 1,\r\n      bevelSize: 1,\r\n      bevelSegments: 2,\r\n      };\r\n  \r\n    this.geometry = new ExtrudeBufferGeometry(shape, extrudeSettings);\r\n    this.material = new MeshPhongMaterial({color: 0xF74300, emissive: 0xF43122, specular:0xffffff })\r\n    this.materials.push(this.material)\r\n    this.body = new Mesh(this.geometry, this.material);\r\n    this.body.scale.set(.045,.0865,.06)\r\n    this.group.add(this.body);\r\n\r\n    this.group.position.set(1,1,1)\r\n    this.group.rotation.z = -1*Math.PI/2 +.2\r\n    this.group.rotation.y = 2*Math.PI/3\r\n    this.group.scale.set= (.04, .04, .04);\r\n\r\n  }\r\n}\r\n\r\nexport default LittleFishes;\r\n\r\n   ","/**\r\n * The scene-manager module serves as an entry point to all scene-related activities, from initialization\r\n * to access to objects to anything else.\r\n *\r\n * The starter version of the scene manager is adapted from the introductory code provided by three.js.\r\n */\r\nimport {\r\n  Scene,\r\n  PerspectiveCamera,\r\n  WebGLRenderer,\r\n  DirectionalLight,\r\n  Object3D,\r\n  Raycaster,\r\n  Vector2,\r\n  Clock\r\n} from 'three'\r\n\r\nimport Turtle from '../cast/turtle'\r\nimport CoreInhabitants from '../cast/coreInhabitants'\r\nimport Particles from '../cast/particles'\r\nimport JellyFish from '../cast/jellyfish'\r\nimport Fish from '../cast/fish'\r\nimport LittleFishes from '../cast/littleFishes'\r\n\r\nconst DEFAULT_ROTATION_RATE = 0.005\r\nconst FIN_SPEED = 0.4\r\nconst clock = new Clock()\r\nconst raycaster = new Raycaster()\r\nconst mouse = new Vector2()\r\nlet counter = 0\r\nlet longCounter = 0\r\nlet rotateModifier = 3\r\nlet tentacleSway = 0\r\n\r\nconst createDemoUniverse = ({ fieldOfView, width, height, nearPlane, farPlane }) => {\r\n  const scene = new Scene()\r\n  const camera = new PerspectiveCamera(fieldOfView, width / height, nearPlane, farPlane)\r\n\r\n  const renderer = new WebGLRenderer({ alpha: true })\r\n  renderer.setSize(width, height)\r\n  renderer.setClearColor(0x000000, 0.0)\r\n\r\n  const coreInhabitants = new CoreInhabitants()\r\n  scene.add(coreInhabitants.group)\r\n\r\n  const turtleRotation = new Object3D()\r\n  scene.add(turtleRotation)\r\n  const turtle = new Turtle(0x00ff00)\r\n  turtleRotation.add(turtle.group)\r\n  turtle.group.position.set(1.75, 0, 0)\r\n  turtle.frontRight.rotation.x = 0.6\r\n  turtle.frontLeft.rotation.x = -0.6\r\n  turtle.backRight.rotation.x = -0.25\r\n  turtle.backLeft.rotation.x = 0.25\r\n\r\n  const jellyRotation = new Object3D()\r\n  scene.add(jellyRotation)\r\n  const jellyFish = new JellyFish(0xce4a21)\r\n  scene.add(jellyFish.group)\r\n  jellyRotation.add(jellyFish.group)\r\n  jellyFish.group.position.set(-0.9, 0.956, 0)\r\n\r\n  const fishRotation = new Object3D()\r\n  scene.add(fishRotation)\r\n  const fish = new Fish(0xffffff)\r\n  fishRotation.add(fish.group)\r\n  fish.group.position.set(5, 0, 5)\r\n  fish.group.rotation.y = -Math.PI\r\n  fish.group.rotation.y += 1\r\n\r\n  const littleFishRotation = new Object3D()\r\n  scene.add(littleFishRotation)\r\n  const littleFish1 = new LittleFishes(0x666699)\r\n  littleFish1.material.color.setHex(0x666699)\r\n  littleFish1.material.emissive.setHex(0x666699)\r\n  scene.add(littleFish1.group)\r\n  littleFishRotation.add(littleFish1.group)\r\n  littleFish1.group.position.set(-7.1, -1, 0)\r\n  littleFish1.group.rotation.y -= .32\r\n\r\n  const littleFish2 = new LittleFishes(0xffffff)\r\n  littleFish2.material.color.setHex(0xff6600)\r\n  littleFish2.material.emissive.setHex(0x666699)\r\n  scene.add(littleFish2.group)\r\n  littleFishRotation.add(littleFish2.group)\r\n  littleFish2.group.rotation.y = (3 * Math.PI) / 2\r\n  littleFish2.group.position.set(12, 7, -6)\r\n\r\n  const littleFish3 = new LittleFishes(0xffffff)\r\n  littleFish2.material.color.setHex(0x6666ff)\r\n  scene.add(littleFish3.group)\r\n  littleFishRotation.add(littleFish3.group)\r\n  littleFish3.group.rotation.y = (3 * Math.PI) / 4 \r\n  littleFish3.group.position.set(-5, 2, 7)\r\n\r\n  const particles = new Particles(0x2194ce)\r\n  scene.add(particles.group)\r\n\r\n  let lights = []\r\n  lights[0] = new DirectionalLight(0xfffddb, 1)\r\n  lights[0].position.set(1.75, 1.75, 0)\r\n  lights[1] = new DirectionalLight(0x1df7cf, 1)\r\n  lights[1].position.set(2, 0, 1.5)\r\n  lights[2] = new DirectionalLight(0x8200c9, 1)\r\n  lights[2].position.set(-1.75, -1.75, 0)\r\n  scene.add(lights[0])\r\n  scene.add(lights[1])\r\n  scene.add(lights[2])\r\n\r\n  let turning = true\r\n  const turn = () => {\r\n    turning = true\r\n  }\r\n\r\n  const stop = () => {\r\n    turning = false\r\n  }\r\n\r\n  let render = function () {\r\n    requestAnimationFrame(render)\r\n\r\n    counter++\r\n    if (counter >= 4/FIN_SPEED) {\r\n      counter = 0\r\n    }\r\n\r\n    longCounter++\r\n    if (longCounter >= 135) {\r\n      longCounter = 0\r\n      rotateModifier = 3\r\n    }\r\n\r\n    renderer.render(scene, camera)\r\n  }\r\n\r\n  function animateFish(finSpeed) {\r\n    fish.tailFin.rotation.x += 0.5*finSpeed\r\n    fish.leftFin.rotation.y += 0.25*finSpeed\r\n    fish.rightFin.rotation.y -= 0.25*finSpeed\r\n    littleFish1.tailFin.rotation.x += 0.3*finSpeed\r\n    littleFish1.leftFin.rotation.y += 0.15*finSpeed\r\n    littleFish1.rightFin.rotation.y -= 0.15*finSpeed\r\n    littleFish2.tailFin.rotation.x += 0.4*finSpeed\r\n    littleFish2.leftFin.rotation.y += 0.2*finSpeed\r\n    littleFish2.rightFin.rotation.y -= 0.2*finSpeed\r\n    littleFish3.tailFin.rotation.x += 0.34*finSpeed\r\n    littleFish3.leftFin.rotation.y += 0.23*finSpeed\r\n    littleFish3.rightFin.rotation.y -= 0.23*finSpeed\r\n  }\r\n\r\n  function animateTurtle(flipperSpeed, fast) {\r\n    turtle.frontRight.rotation.x -= flipperSpeed/(fast ? 1 : 8)\r\n      turtle.frontLeft.rotation.x += flipperSpeed/(fast ? 1 : 8)\r\n      turtle.backRight.rotation.x += 0.4*flipperSpeed/(fast ? 1 : 8)\r\n      turtle.backLeft.rotation.x -= 0.4*flipperSpeed/(fast ? 1 : 8)\r\n  }\r\n\r\n  function animateKelp() {\r\n    const t = clock.getElapsedTime()\r\n    for (const seakelp of coreInhabitants.kelpgroup.children) {\r\n      for (const kelp of seakelp.children) {\r\n        kelp.geometry.vertices.map(v => {\r\n          v.z = 0.5 * Math.sin(v.x * 200 + t*2)\r\n        })\r\n        kelp.geometry.verticesNeedUpdate = true\r\n      }\r\n    }\r\n  }\r\n\r\n  function animateJellyfish() {\r\n    tentacleSway += rotateModifier/10\r\n    let i = 0;\r\n    for (const tentacle of jellyFish.tentacles.children) {\r\n      let initialY = tentacle.geometry.vertices[tentacle.geometry.vertices.length - 1].y\r\n      tentacle.geometry.vertices.map(v => {\r\n        v.x = (initialY - v.y) * rotateModifier/6 * Math.sin(v.y/5 + tentacleSway + i)\r\n      })\r\n      tentacle.geometry.verticesNeedUpdate = true\r\n      i++\r\n    }\r\n  }\r\n\r\n  render()\r\n\r\n  const animate = () => {\r\n    window.requestAnimationFrame(animate)\r\n    window.addEventListener('click', onDocumentMouseDown, false)\r\n\r\n    if (counter < 2/FIN_SPEED) {\r\n      animateFish(FIN_SPEED)\r\n    } else {\r\n      animateFish(-FIN_SPEED)\r\n    }\r\n\r\n    if (longCounter < 80) {\r\n      coreInhabitants.clam.clamTop.rotation.z += 0.02\r\n    } else if (longCounter >= 82) {\r\n      coreInhabitants.clam.clamTop.rotation.z = 0.17\r\n    } else {\r\n      coreInhabitants.clam.clamTop.rotation.z -= 0.8\r\n    }\r\n    \r\n    if (longCounter < 120) {\r\n      animateTurtle(0.05, false)\r\n      rotateModifier *= 0.992\r\n    } else {\r\n      animateTurtle(-0.05, true)\r\n      rotateModifier += 0.1237\r\n    }\r\n\r\n    animateKelp()\r\n    animateJellyfish()\r\n\r\n    if (turning) {\r\n      coreInhabitants.group.rotation.x += DEFAULT_ROTATION_RATE\r\n      coreInhabitants.group.rotation.y += DEFAULT_ROTATION_RATE\r\n      particles.group.rotation.y -= DEFAULT_ROTATION_RATE * 0.9\r\n      turtleRotation.rotation.y -= DEFAULT_ROTATION_RATE * rotateModifier\r\n      jellyRotation.rotation.x += DEFAULT_ROTATION_RATE * rotateModifier\r\n      fishRotation.rotation.y += DEFAULT_ROTATION_RATE\r\n      littleFishRotation.rotation.y += DEFAULT_ROTATION_RATE *1.1\r\n    }\r\n  }\r\n\r\n  function onDocumentMouseDown(event) {\r\n    event.preventDefault()\r\n    mouse.x = (event.clientX / renderer.domElement.clientWidth) * 2 - 1\r\n    mouse.y = -(event.clientY / renderer.domElement.clientHeight) * 2 + 1\r\n\r\n    raycaster.setFromCamera(mouse, camera)\r\n    let intersects = raycaster.intersectObjects(\r\n      particles.group.children.flatMap(x => (x.hasOwnProperty('children') && x.children.length > 0 ? x.children : x))\r\n    )\r\n\r\n    if (intersects.length > 0) {\r\n      if (intersects[0].object.hasOwnProperty('callback')) {\r\n        intersects[0].object.callback()\r\n      } else if (intersects[0].object.parent.hasOwnProperty('callback')) {\r\n        intersects[0].object.parent.callback()\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    camera,\r\n    renderer,\r\n    animate,\r\n    turn,\r\n    stop,\r\n    cast: [\r\n      coreInhabitants,\r\n      particles,\r\n      turtle,\r\n      jellyFish,\r\n      fish,\r\n      littleFish1,\r\n      littleFish2, \r\n      littleFish3\r\n    ]\r\n  }\r\n}\r\n\r\nexport { createDemoUniverse }\r\n","/**\r\n * This React app serves as a very thin “wrapper” around what is otherwise pure three.js code.\r\n * Although various “React three.js components” are available, these can get complicated and\r\n * possibly overly opinionated for beginners. We take the approach here of separating React and\r\n * three.js code from each other as much as possible.\r\n */\r\nimport { useState, useEffect, useRef } from 'react'\r\n\r\nimport './App.css'\r\n\r\nimport { createDemoUniverse } from './universes/demo-universe'\r\n\r\nconst DEFAULT_FIELD_OF_VIEW = 75\r\nconst DEFAULT_NEAR_PLANE = 0.1\r\nconst DEFAULT_FAR_PLANE = 1000\r\n\r\nconst DEFAULT_DISTANCE_FROM_ORIGIN = 5\r\n\r\nconst RADIAN_CONVERSION = Math.PI / 180\r\n\r\nconst App = () => {\r\n  const [universe, setUniverse] = useState(null)\r\n  const [cameraControl, setCameraControl] = useState(false)\r\n\r\n  const viewport = useRef()\r\n\r\n  useEffect(() => {\r\n    const viewportElement = viewport?.current\r\n    if (!viewportElement) {\r\n      return\r\n    }\r\n\r\n    const universe = createDemoUniverse({\r\n      fieldOfView: DEFAULT_FIELD_OF_VIEW,\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n      nearPlane: DEFAULT_NEAR_PLANE,\r\n      farPlane: DEFAULT_FAR_PLANE\r\n    })\r\n\r\n    const { camera, renderer } = universe\r\n    camera.position.z = DEFAULT_DISTANCE_FROM_ORIGIN\r\n\r\n    // Development note: three.js does not know that React exists. It is thus necessary to add\r\n    // three.js’s element manually. However, this also means that the usual auto-loading behavior\r\n    // of a React app may result in multiple copies of this element: because the previous element\r\n    // isn’t under React’s control, it may continue to sit there even after the app’s code has\r\n    // changed. As a result, always try to _reload the page_ if the 3D viewport does not seem to\r\n    // update as expected.\r\n    //\r\n    // In addition, if the React portion of the app gets overly complicated, the rendering cycle\r\n    // may start to interfere with this manual addition. Use this playground for applications that\r\n    // are primarily three.js code, with React providing just basic event handling and UI.\r\n    viewportElement.innerHTML = '' // Cheapo clearing of prior children.\r\n    viewportElement.appendChild(renderer.domElement)\r\n\r\n    universe.animate()\r\n    setUniverse(universe)\r\n  }, [viewport])\r\n\r\n  const handleWireframe = event => {\r\n    for (const material of universe.cast.flatMap(castMember => castMember.materials)) {\r\n      material.wireframe = true\r\n    }\r\n  }\r\n\r\n  const handleSolid = event => {\r\n    for (const material of universe.cast.flatMap(castMember => castMember.materials)) {\r\n      material.wireframe = false\r\n    }\r\n  }\r\n\r\n  const handleMouseDown = event => {\r\n    setCameraControl(true)\r\n  }\r\n\r\n  const handleMouseMove = event => {\r\n    if (!cameraControl || !universe) {\r\n      return\r\n    }\r\n\r\n    const { camera } = universe\r\n    camera.translateZ(-DEFAULT_DISTANCE_FROM_ORIGIN)\r\n    camera.rotateY(event.movementX * RADIAN_CONVERSION)\r\n    camera.rotateX(event.movementY * RADIAN_CONVERSION)\r\n    camera.translateZ(DEFAULT_DISTANCE_FROM_ORIGIN)\r\n  }\r\n\r\n  const handleMouseUp = event => {\r\n    setCameraControl(false)\r\n  }\r\n\r\n  const handleTurn = event => {\r\n    universe.turn()\r\n  }\r\n\r\n  const handleStop = event => {\r\n    universe.stop()\r\n  }\r\n\r\n  return (\r\n    <section className=\"App\">\r\n      <header></header>\r\n      <main ref={viewport} onMouseDown={handleMouseDown} onMouseMove={handleMouseMove} onMouseUp={handleMouseUp}></main>\r\n      <footer>\r\n        <section>\r\n          <button disabled={!universe} onClick={handleWireframe}>\r\n            Wireframe\r\n          </button>\r\n\r\n          <button disabled={!universe} onClick={handleSolid}>\r\n            Solid\r\n          </button>\r\n        </section>\r\n\r\n        <section>\r\n          <button disabled={!universe} onClick={handleTurn}>\r\n            Turn\r\n          </button>\r\n\r\n          <button disabled={!universe} onClick={handleStop}>\r\n            Stop\r\n          </button>\r\n        </section>\r\n      </footer>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}